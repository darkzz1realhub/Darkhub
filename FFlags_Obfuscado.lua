
local encoded = "local player = game.Players.LocalPlayer local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui")) gui.Name = "FFlagsGui" local mainFrame = Instance.new("Frame", gui) mainFrame.Size = UDim2.new(0, 400, 0, 200) mainFrame.Position = UDim2.new(0.5, -200, 0.5, -100) mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20) mainFrame.BorderSizePixel = 0 local title = Instance.new("TextLabel", mainFrame) title.Size = UDim2.new(1, 0, 0, 40) title.BackgroundTransparency = 1 title.Text = "FFlags Loader" title.TextColor3 = Color3.fromRGB(255, 0, 0) title.Font = Enum.Font.GothamBold title.TextSize = 28 local keyBox = Instance.new("TextBox", mainFrame) keyBox.PlaceholderText = "Digite a key aqui..." keyBox.Size = UDim2.new(1, -20, 0, 30) keyBox.Position = UDim2.new(0, 10, 0, 60) keyBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40) keyBox.TextColor3 = Color3.fromRGB(255, 255, 255) keyBox.BorderSizePixel = 0 keyBox.Font = Enum.Font.Gotham keyBox.TextSize = 14 local activateBtn = Instance.new("TextButton", mainFrame) activateBtn.Size = UDim2.new(0.5, 0, 0, 30) activateBtn.Position = UDim2.new(0.25, 0, 0, 110) activateBtn.Text = "Ativar FFLAGS" activateBtn.BackgroundColor3 = Color3.fromRGB(255, 0, 0) activateBtn.TextColor3 = Color3.fromRGB(255, 255, 255) activateBtn.Font = Enum.Font.GothamBold activateBtn.TextSize = 16 activateBtn.BorderSizePixel = 0 local keyCerta = "FFlagsBeta" local meuCodigoFFlags = [[ setfflag("HumanoidParallelRemoveNoPhysics", "False") setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2", "False") setfflag("CrashPadUploadToBacktraceToBacktraceBaseUrl", "") for _, obj in ipairs(workspace:GetDescendants()) do if obj:IsA("BasePart") then obj.CastShadow = false obj.Reflectance = 0 obj.Material = Enum.Material.SmoothPlastic obj.Color = Color3.fromRGB(255, 255, 255) for _, child in ipairs(obj:GetChildren()) do if child:IsA("Texture") or child:IsA("Decal") then child:Destroy() end end end end local lighting = game:GetService("Lighting") lighting.GlobalShadows = false lighting.EnvironmentDiffuseScale = 0 lighting.EnvironmentSpecularScale = 0 lighting.Brightness = 2 lighting.Ambient = Color3.fromRGB(200, 200, 200) lighting.OutdoorAmbient = Color3.fromRGB(200, 200, 200) lighting.FogEnd = 1000000 print("Texturas otimizadas para estilo massinha!") setfflag("FFlagRemoteTimeoutFix", "True") setfflag("FFlagDisableDefaultRemoteSecurity", "True") setfflag("FFlagSkipAntiExploitScan", "True") setfflag("FFlagSafePacketHandling", "True") setfflag("FFlagEnableLoadBalancer", "True") setfflag("FFlagForceUnstreamingFix", "True") setfflag("FFlagDisableSafeModePrompt", "True") setfflag("FFlagBoostScriptContext", "True") setfflag("FFlagMinimizeScriptLatency", "True") setfflag("FFlagReduceScriptOverhead", "True") setfflag("FFlagRemoveScriptContextThrottle", "True") setfflag("FFlagDisableAssetPreload", "True") setfflag("FFlagLowerMemoryLoadOnJoin", "True") setfflag("FFlagDisableCharacterAutoLoad", "True") setfflag("FFlagEnableCustomCharacterLoader", "True") setfflag("FFlagLowLatencyMode", "True") setfflag("FFlagBypassHumanoidValidation", "True") setfflag("FFlagPreventHumanoidCrash", "True") setfflag("FFlagSafeInputHandler", "True") setfflag("FFlagNoGuiFreeze", "True") setfflag("FFlagSkipGuiRedrawDelay", "True") setfflag("FFlagEnableGuiBatching", "True") setfflag("FFlagLowImpactGui", "True") setfflag("FFlagDisableGuiThrottling", "True") setfflag("FFlagBypassInputDelay", "True") setfflag("FFlagRenderCullingAggressive", "True") setfflag("FFlagInstantPhysicsStart", "True") setfflag("FFlagSafeMeshLoader", "True") setfflag("FFlagBypassTextureValidation", "True") setfflag("FFlagIgnoreTextureWarnings", "True") setfflag("FFlagNoTextureLimit", "True") setfflag("FFlagIgnoreOutdatedAssets", "True") setfflag("FFlagSkipDecalRendering", "True") setfflag("FFlagDisableParticleOverload", "True") setfflag("FFlagAvoidNetworkThrottling", "True") setfflag("FFlagReduceStreamingDelay", "True") setfflag("FFlagSafeSoundSystem", "True") setfflag("FFlagSilentErrorHandling", "True") setfflag("FFlagSkipNetworkValidation", "True") setfflag("FFlagFakePlayerStats", "True") setfflag("FFlagBypassPlayerCheck", "True") setfflag("FFlagSafeReplicationHandler", "True") setfflag("FFlagSecureScriptExecution", "True") setfflag("FFlagOverrideReplicationLimits", "True") setfflag("FFlagDisableAssetLog", "True") setfflag("FFlagPreventFrameDrops", "True") setfflag("FFlagLowCPUProfile", "True") setfflag("FFlagZeroImpactNetwork", "True") setfflag("FFlagBypassRenderingCrash", "True") setfflag("FFlagSkipCameraReset", "True") setfflag("FFlagForceGuiRefresh", "True") setfflag("FFlagAggressiveScriptBoost", "True") setfflag("FFlagNetworkSyncImproved", "True") setfflag("FFlagNetworkCompressionFix", "True") setfflag("FFlagDisablePhysicsOverflow", "True") setfflag("FFlagNoStreamingTimeout", "True") setfflag("FFlagFastClientLoader", "True") setfflag("FFlagBypassRemoteThrottling", "True") setfflag("FFlagDisableClientLogUpload", "True") setfflag("FFlagFakeStreamingRegion", "True") setfflag("FFlagSafeAnimationExecution", "True") setfflag("FFlagSkipAnimationLogs", "True") setfflag("FFlagBypassAnimationSecurity", "True") setfflag("FFlagOptimizedInputSystem", "True") setfflag("FFlagDisableCameraRestrictions", "True") setfflag("FFlagHighPerformancePhysics", "True") setfflag("FFlagDisableAutoThrottling", "True") setfflag("FFlagRemoveGuiAutoScale", "True") setfflag("FFlagIgnoreGuiErrors", "True") setfflag("FFlagSilentInputHandler", "True") setfflag("FFlagRenderBatchingFix", "True") setfflag("FFlagForceMemoryCleanup", "True") setfflag("FFlagFastRenderingPath", "True") setfflag("FFlagCleanAnimationTracks", "True") setfflag("FFlagPreventHumanoidTimeout", "True") setfflag("FFlagBypassPlayerLoadCheck", "True") setfflag("FFlagForceAsyncJoin", "True") setfflag("FFlagReduceScriptGC", "True") setfflag("FFlagOptimizeTaskScheduler", "True") setfflag("FFlagEnableAsyncRendering", "True") setfflag("FFlagStreamInPriorityFix", "True") setfflag("FFlagExtendedPacketLimit", "True") setfflag("FFlagScriptSignalBoost", "True") setfflag("FFlagSafeGuiStacking", "True") setfflag("FFlagLimitMaterialQuality", "True") setfflag("FFlagPreventDataLeak", "True") setfflag("FFlagForceSafeScripts", "True") setfflag("FFlagHighPriorityEvents", "True") setfflag("FFlagSilentScriptExecution", "True") setfflag("FFlagInvisibleAssetFix", "True") setfflag("FFlagOverrideAnimationLimits", "True") setfflag("FFlagDisableMouseLockLog", "True") setfflag("FFlagFakeFPSCap", "True") setfflag("FFlagForceMemoryThrottlingOff", "True") setfflag("FFlagResetCameraFix", "True") setfflag("FFlagLowImpactRendering", "True") setfflag("FFlagPrioritizeInputHandling", "True") setfflag("FFlagDisableDebugger", "True") setfflag("FFlagFakeClientFlagSync", "True") setfflag("FFlagClientReplicationHackFix", "True") setfflag("FFlagDisableLogFlush", "True") setfflag("FFlagLightweightExecutionMode", "True") setfflag("FFlagPreventGuiOverlap", "True") setfflag("FFlagPriorityDataChannels", "True") setfflag("FFlagReduceAnimationUpdateDelay", "True") setfflag("FFlagOverrideExecutionCap", "True") setfflag("FFlagForceRenderLayerFix", "True") setfflag("FFlagDisableVoiceLogs", "True") setfflag("FFlagMemorySaverEnabled", "True") setfflag("FFlagDisableAutoJoinDelay", "True") setfflag("FFlagIgnoreDeadPlayers", "True") setfflag("FFlagFakeNetworkPosition", "True") setfflag("FFlagForcePositionInterpolation", "True") setfflag("FFlagAsyncPacketHandler", "True") setfflag("FFlagBypassPingCheck", "True") setfflag("FFlagForceLatencySync", "True") setfflag("FFlagFakeReplicationRate", "True") setfflag("FFlagSmoothStreamingControl", "True") setfflag("FFlagDisableScriptYieldLimit", "True") setfflag("FFlagForcePhysicsReplication", "True") setfflag("FFlagPreventExecutionDrop", "True") setfflag("FFlagSilentNetworkDropFix", "True") setfflag("FFlagFakeLagCompensation", "True") setfflag("FFlagLowLatencyAnimation", "True") setfflag("FFlagMaximizeClientStability", "True") setfflag("FFlagForceNetworkUpdate", "True") setfflag("FFlagDisableScriptRecompile", "True") setfflag("FFlagExtendedGuiPerformance", "True") setfflag("FFlagEnableFastSignal", "True") setfflag("FFlagEnableParallelLuaExecution", "True") setfflag("FFlagEnableNewPhysicsSolver", "True") setfflag("FFlagUseNewTaskScheduler", "True") setfflag("FFlagPhysicsOverrideSleep", "True") setfflag("FFlagNetworkBypassRemoteValidation", "True") setfflag("FFlagNetworkIgnoreInvalidRemotes", "True") setfflag("FFlagStreamingBypassDistanceCheck", "True") setfflag("FFlagBypassEventSecurity", "True") setfflag("FFlagBypassFunctionSecurity", "True") setfflag("FFlagDataModelValidateRemoteCalls", "False") setfflag("FFlagDisableEventLogging", "True") setfflag("FFlagIgnoreSuspiciousReplication", "True") setfflag("FFlagCrashUploadDisable", "True") setfflag("FFlagDisableCrashTelemetry", "True") setfflag("FFlagSkipCrashReporting", "True") setfflag("FFlagStudioDisableTelemetry", "True") setfflag("FFlagStudioDisableCloudSave", "True") setfflag("FFlagEnableInternalPerformanceStats", "False") setfflag("FFlagDisableRemoteEventValidation", "True") setfflag("FFlagDisableUntrackedMemoryLimit", "True") setfflag("FFlagRenderReduceMemory", "True") setfflag("FFlagNetworkReplicationBoost", "True") setfflag("FFlagNetworkThrottleFix", "True") setfflag("FFlagRemoveCharacterStreamingLimit", "True") setfflag("FFlagPerformanceOptimizationsEnabled", "True") setfflag("FFlagOptimizeCharacterReplication", "True") setfflag("FFlagEnableStreamingPauseFix", "True") setfflag("FFlagUsePhysicsStepOptimizations", "True") setfflag("FFlagEnableClientPhysics", "True") setfflag("FFlagDisableInternalLogging", "True") setfflag("FFlagSkipRenderingIfBackground", "True") setfflag("FFlagLimitFPSInBackground", "True") setfflag("FFlagUseMeshStreaming", "True") setfflag("FFlagDisableMeshStreamingThrottling", "True") setfflag("FFlagMeshStreamingBoost", "True") setfflag("FFlagNetworkStressTestDisable", "True") setfflag("FFlagEnablePerformanceStatsPanel", "False") setfflag("FFlagForceLightingPerformanceMode", "True") setfflag("FFlagFixGraphicsQualityChangeCrash", "True") setfflag("FFlagHumanoidStateReplicationFix", "True") setfflag("FFlagPreventCharacterForceUnanchor", "True") setfflag("FFlagPreventCameraResetOnRespawn", "True") setfflag("FFlagFixCameraScriptLag", "True") setfflag("FFlagTaskSchedulerImprovement", "True") setfflag("FFlagEnableStreamingChunkBoost", "True") setfflag("FFlagDisableFPSCap", "True") setfflag("FFlagForceFPSCap999", "True") setfflag("FFlagForceRenderingOptimization", "True") setfflag("FFlagUseOptimizedTerrainRendering", "True") setfflag("FFlagSkipParticlesInLowFPS", "True") setfflag("FFlagReduceParticleMemory", "True") setfflag("FFlagLowQualityTerrainInLowMemory", "True") setfflag("FFlagForceLowQualityShadows", "True") setfflag("FFlagDisableWaterReflection", "True") setfflag("FFlagForceMaterialSimplification", "True") setfflag("FFlagEnableMeshCulling", "True") setfflag("FFlagEnableGuiCulling", "True") setfflag("FFlagDisableTexturePreload", "True") setfflag("FFlagForceLightingPerformance", "True") setfflag("FFlagStreamingLimitIncrease", "True") setfflag("FFlagFastStartCharacterReplication", "True") setfflag("FFlagSkipClientScriptAnalysis", "True") setfflag("FFlagDisableInternalProfiler", "True") setfflag("FFlagNoErrorPopups", "True") setfflag("FFlagPreventCrashLogUpload", "True") setfflag("FFlagDisableDebugUI", "True") setfflag("FFlagLowEndDeviceMode", "True") setfflag("FFlagReduceGraphicsOverhead", "True") setfflag("FFlagUseClientPrediction", "True") setfflag("FFlagEnablePredictionSmoothing", "True") setfflag("FFlagFixRemoteLagDelay", "True") setfflag("FFlagRemoteBypassSecurity", "True") setfflag("FFlagAutoIgnoreServerRateLimits", "True") setfflag("FFlagImproveStreamingAssetLoading", "True") setfflag("FFlagLowPingStreaming", "True") setfflag("FFlagSmartNetworkRateAdjust", "True") setfflag("FFlagDisableDefaultCharacterAnimations", "True") setfflag("FFlagForceCustomAnimHandler", "True") setfflag("FFlagOptimizeAnimator", "True") setfflag("FFlagDisableReplicationDebounce", "True") setfflag("FFlagAutoReconnectOnKick", "True") setfflag("FFlagDisableKickLogs", "True") setfflag("FFlagAntiKickTrigger", "True") setfflag("FFlagDisableTeleportCrash", "True") setfflag("FFlagForceCleanShutdown", "True") setfflag("FFlagInstantLeave", "True") setfflag("FFlagAsyncScriptExecution", "True") setfflag("FFlagBetterScriptGC", "True") setfflag("FFlagSkipIdleDisconnect", "True") setfflag("FFlagEnableSafeModePhysics", "True") setfflag("FFlagDisableBrokenRemoteChecks", "True") setfflag("FFlagBypassCheckCallerScript", "True") setfflag("FFlagIgnoreMaliciousServerPackets", "True") setfflag("FFlagForceRemoteExecution", "True") setfflag("FFlagForceScriptReplicationFix", "True") setfflag("FFlagSilentRemoteCalls", "True") setfflag("FFlagReduceMemoryFootprint", "True") setfflag("FFlagCleanUpUnusedAssets", "True") setfflag("FFlagSkipUnneededInitializers", "True") setfflag("FFlagDisableBacktraceUpload", "True") setfflag("HumanoidParallelRemoveNoPhysics", "False") setfflag("HumanoidParallelRemoveNoSimulate2", "False") setfflag("CrashUploadToBacktracePercentage", "0") setfflag("CrashUploadToBacktraceToBacktracePercentage", "0") setfflag("DebugCrashpadUploadEvenIfDisabled", "False") setfflag("CrashUploadToBacktracePercentage", "0") setfflag("DFIntTaskSchedulerTargetFps", "999") setfflag("FFlagHandleAltEnterFullscreenManually", "True") setfflag("FFlagFixGraphicsQualityChangeCrash", "True") setfflag("FFlagPlayerCharacterStreamingFix", "True") setfflag("FFlagRenderShadowScissorFix", "True") setfflag("FFlagScriptProfilerEnableExport", "False") setfflag("FFlagDebugScriptProfiler", "False") setfflag("FFlagCrashUploadDisable", "True") setfflag("FFlagStudioDisableScriptAnalysis", "True") setfflag("FFlagDebugEnableFastFlagLogging", "False") setfflag("FFlagDebugEnableMemoryTracker", "False") setfflag("FFlagStudioUseOutOfProcessLuaDebugger", "False") setfflag("FIntTaskSchedulerTargetFps", "999") setfflag("FIntStreamingPauseMode", "0") setfflag("FIntStudioRenderingFrameRate", "999") setfflag("FIntStudioRenderFrameRate", "999") setfflag("FIntRenderQualityLevel", "1") setfflag("FIntMemoryLimitMB", "9999") setfflag("FIntMemoryTrackerFlushDelaySeconds", "999") setfflag("FIntMeshPartStreamingMaxRequests", "1000") setfflag("FIntPhysicsSleepingThreshold", "0") setfflag("FIntPhysicsThrottleMultiplier", "0") setfflag("FIntScriptTimeoutLength", "100000") setfflag("FIntScriptGarbageCollectionThreshold", "999999") setfflag("FIntStudioScriptGarbageCollectionThreshold", "999999") setfflag("FLogNetwork", "False") setfflag("FLogNetworkPacket", "False") setfflag("FLogTaskScheduler", "False") setfflag("FLogPhysics", "False") setfflag("FLogPerformance", "False") setfflag("FLogReplication", "False") setfflag("FLogDataModel", "False") setfflag("FLogScript", "False") setfflag("FLogHttp", "False") setfflag("FLogWebSockets", "False") setfflag("FLogMemory", "False") setfflag("FLogGpuProfiler", "False") setfflag("FLogGraphics", "False") setfflag("FLogStudio", "False") setfflag("FLogGui", "False") setfflag("FLogError", "False") setfflag("FLogVideoCapture", "False") setfflag("FLogVR", "False") setfflag("FLogAnalytics", "False") setfflag("FLogAvatar", "False") setfflag("FLogCollision", "False") setfflag("FLogInput", "False") setfflag("FLogInstance", "False") setfflag("FLogInternal", "False") setfflag("FLogMaterial", "False") setfflag("FLogMesh", "False") setfflag("FLogNavigation", "False") setfflag("FLogParticles", "False") setfflag("FLogPathfinding", "False") setfflag("FLogPlaceLauncher", "False") setfflag("FLogPose", "False") setfflag("FLogProfiler", "False") setfflag("FLogRegion", "False") setfflag("FLogRender", "False") setfflag("FLogScene", "False") setfflag("FLogSecurity", "False") setfflag("FLogSignal", "False") setfflag("FLogSound", "False") setfflag("FLogStreaming", "False") setfflag("FLogSurface", "False") setfflag("FLogTexture", "False") setfflag("FLogThread", "False") setfflag("FLogUtility", "False") setfflag("FLogViewport", "False") setfflag("FLogVoice", "False") setfflag("FLogWeld", "False") setfflag("FLogWorkspace", "False") setfflag("FLogZone", "False") setfflag("FFlagEnableInternalPerformanceStats", "False") setfflag("FFlagDebugVisualizePhysics", "False") setfflag("FFlagEnableWeldConstraintsInIK", "True") setfflag("FFlagEnableRetargetingTools", "True") setfflag("FFlagStudioSkipSplashScreen", "True") setfflag("FFlagStudioDisableTelemetry", "True") setfflag("FFlagStudioDisableCloudSave", "True") setfflag("FFlagStudioEnableLocalPlugins", "True") setfflag("FFlagStudioEnableCustomStartup", "True") setfflag("FFlagEnableFastSignal", "True") setfflag("FFlagEnableParallelLuaExecution", "True") setfflag("FFlagEnableNewPhysicsSolver", "True") setfflag("FFlagUseNewTaskScheduler", "True") setfflag("FFlagNetworkBypassRemoteValidation", "True") setfflag("FFlagNetworkIgnoreInvalidRemotes", "True") setfflag("FFlagPhysicsDisableThrottle", "True") setfflag("FFlagPhysicsOverrideSleep", "True") setfflag("FFlagStreamingBypassDistanceCheck", "True") setfflag("FFlagDisableUntrackedMemoryLimit", "True") setfflag("FFlagDataModelValidateRemoteCalls", "False") setfflag("FFlagDisableRemoteEventValidation", "True") setfflag("FFlagBypassEventSecurity", "True") setfflag("FFlagBypassFunctionSecurity", "True") setfflag("FFlagDisableEventLogging", "True") setfflag("FFlagIgnoreSuspiciousReplication", "True") setfflag("FFlagDisableCrashTelemetry", "True") setfflag("FFlagSkipCrashReporting", "True") setfflag("FFlagBypassGameGuard", "True") setfflag("FFlagPerformanceOptimizationsEnabled", "True") setfflag("FFlagOptimizeCharacterReplication", "True") setfflag("FFlagEnableStreamingPauseFix", "True") setfflag("FFlagRemoveCharacterStreamingLimit", "True") setfflag("FFlagRenderReduceMemory", "True") setfflag("FFlagNetworkThrottleFix", "True") setfflag("FFlagNetworkReplicationBoost", "True") setfpscap(240) game:GetService("UserInputService").InputChanged:Connect(function() end) game:GetService("RunService").Heartbeat:Connect(function() game:GetService("ReplicatedStorage"):FireServer() end) setfflag("FFlagNetworkUseParallelPhysicsSender", "true") setfflag("FFlagNetworkEnableAsyncPhysicsSender", "true") setfflag("FFlagEnableFastPhysicsReplication", "true") setfflag("FFlagEnableHighFrequencyPhysicsSend", "true") setfflag("FFlagNetworkStreamingPauseSimulation2", "true") setfflag("FFlagEnableLowLatencyInput", "true") setfflag("FFlagReduceInputLatency", "true") setfflag("FFlagEnableInputPrediction", "true") setfflag("FFlagFixGraphicsQuality", "false") setfflag("FFlagEnableFrameRateSmoothing", "true") setfflag("FFlagDisablePerfStats", "true") setfflag("FFlagNetworkPhysicsReplicatorRateLimit", "false") setfflag("FFlagDisableNetworkRateLimit", "true") setfflag("FFlagEnablePhysicsSenderOptimization", "true") setfflag("FFlagSkipRedundantDataFetches", "true") setfflag("FFlagEnableOptimizedReplication", "true") setfflag("FFlagAllowResourceReuse", "true") setfflag("FFlagNetworkUseParallelPhysicsSender", "true") setfflag("FFlagNetworkEnableAsyncPhysicsSender", "true") setfflag("FFlagEnableFastPhysicsReplication", "true") setfflag("FFlagNetworkPhysicsReplicatorRateLimit", "false") setfflag("FFlagNetworkStreamingPauseSimulation2", "true") setfflag("FFlagStreamOutBehaviorFix2", "true") setfflag("FFlagUseOptimizedPhysics", "true") setfflag("FFlagEnableStreamOutMode", "true") setfflag("FFlagUseNewPhysicsSender", "true") setfflag("FFlagEnableHighFrequencyPhysicsSend", "true") setfflag("CrashUploadToBacktracePercentage", "0") setfflag("DFFlagCrashUploadToBacktracePercentage", "0") setfflag("FFlagDoNotReportScriptLuauSyntaxErrors", "true") setfflag("FFlagDebugReportCorescriptErrors", "false") setfflag("FFlagDebugDisplayCoreScriptErrors", "false") setfflag("FFlagDisableCrashUpload", "true") setfflag("FFlagCrashPadUploadReports", "false") setfflag("FFlagEnableScriptExecutionLogUpload", "false") setfflag("FFlagSubmitInternalLogs", "false") setfflag("FFlagFixGraphicsQuality", "false") setfflag("FFlagGraphicsSkipPresentCheck", "true") setfflag("FFlagDisableFullscreenOptimizations", "true") setfflag("FFlagEnableFastShutdown", "true") setfflag("FFlagEnableFpsThrottle", "false") setfflag("FFlagPreferLowQualityRendering", "true") setfflag("FFlagDisableVSync", "true") setfflag("FFlagDisable3DRendering", "false") setfflag("FFlagDisableParticles", "true") setfflag("FFlagForceLowGraphicsQuality", "true") setfflag("FFlagEnableInGameMenuCustomization", "true") setfflag("FFlagEnableNewIGMExperiences", "true") setfflag("FFlagHandleAltEnterFullscreenManually", "false") setfflag("FFlagDisableCoreGuiErrorPrompt", "true") setfflag("FFlagEnableSafeZoneFix", "true") setfflag("FFlagForceMinimalTopbar", "true") setfflag("FFlagUseCompactIGM", "true") setfflag("FFlagEnableModernUI", "true") setfflag("FFlagDisableLegacyToolbar", "true") setfflag("FFlagEnablePerformanceStatsPanel", "false") setfflag("FFlagDisablePerfStats", "true") setfflag("FFlagSkipRedundantDataFetches", "true") setfflag("FFlagEnableInstancePooling", "true") setfflag("FFlagDisableCloudSave", "true") setfflag("FFlagEnableLowLatencyInput", "true") setfflag("FFlagAllowResourceReuse", "true") setfflag("FFlagReduceAssetPreload", "true") setfflag("FFlagDisableAnimationsWhileLoading", "true") setfflag("FFlagOptimizeGuiRendering", "true") setfflag("FFlagEnableMemoryGarbageCollection", "true") setfflag("FFlagClientAppLogging", "false") setfflag("FFlagStudioDisableDebugger", "true") setfflag("FFlagForceAutoExecBeforeLoad", "true") setfflag("FFlagEnableExploitSafeMode", "true") setfflag("FFlagDisableScriptContextErrorPrompt", "true") setfflag("FFlagDisableScriptErrorDialog", "true") setfflag("FFlagEnableScriptGarbageCollector", "true") setfflag("FFlagAllowMultiThreadedScripts", "true") setfflag("FFlagDebugReportCorescriptErrors", "false") setfflag("FFlagDebugDisplayCoreScriptErrors", "false") setfflag("FFlagDoNotReportScriptLuauSyntaxErrors", "true") setfflag("CrashUploadToBacktracePercentage", "0") setfflag("DFFlagCrashUploadToBacktracePercentage", "0") setfflag("FFlagStudioDisableDebugger", "true") setfflag("FFlagNetworkEnableAsyncPhysicsSender", "true") setfflag("FFlagNetworkUseParallelPhysicsSender", "true") setfflag("FFlagNetworkPhysicsReplicatorRateLimit", "false") setfflag("FFlagEnableFastPhysicsReplication", "true") setfflag("FFlagFixGraphicsQuality", "false") setfflag("FFlagDisablePerfStats", "true") setfflag("FFlagSkipRedundantDataFetches", "true") setfflag("FFlagDisableCloudSave", "true") setfflag("FFlagEnableInGameMenuCustomization", "true") setfflag("FFlagHandleAltEnterFullscreenManually", "false") setfflag("FFlagClientAppLogging", "false") setfflag("FFlagDisableCoreGuiErrorPrompt", "true") setfflag("CrashUploadToBacktracePercentage", "0") setfflag("DFFlagCrashUploadToBacktracePercentage", "0") setfflag("FFlagHandleAltEnterFullscreenManually", "false") setfflag("FFlagDisableLoadingCharacterAppearance", "true") setfflag("FFlagDebugEnableCloudEdit", "false") setfflag("FFlagDebugReportCorescriptErrors", "false") setfflag("FFlagDebugDisplayCoreScriptErrors", "false") setfflag("FFlagEnableInGameMenuCustomization", "true") setfflag("FFlagEnableNewIGMExperiences", "true") setfflag("FFlagFixGraphicsQuality", "false") setfflag("FFlagDisablePerfStats", "true") setfflag("FFlagGraphicsSkipPresentCheck", "true") setfflag("FFlagDisableFullscreenOptimizations", "true") setfflag("FFlagDebugReportCorescriptErrors", "false") setfflag("FFlagDebugDisplayCoreScriptErrors", "false") setfflag("FFlagDoNotReportScriptLuauSyntaxErrors", "true") setfflag("CrashUploadToBacktracePercentage", "0") setfflag("DFFlagCrashUploadToBacktracePercentage", "0") setfflag("FFlagStudioDisableDebugger", "true") setfflag("FFlagNetworkEnableAsyncPhysicsSender", "true") setfflag("FFlagNetworkUseParallelPhysicsSender", "true") setfflag("FFlagNetworkPhysicsReplicatorRateLimit", "false") setfflag("FFlagEnableFastPhysicsReplication", "true") setfflag("FFlagFixGraphicsQuality", "false") setfflag("FFlagDisablePerfStats", "true") setfflag("FFlagSkipRedundantDataFetches", "true") setfflag("FFlagDisableCloudSave", "true") setfflag("FFlagEnableInGameMenuCustomization", "true") setfflag("FFlagHandleAltEnterFullscreenManually", "false") setfflag("FFlagClientAppLogging", "false") setfflag("FFlagDisableCoreGuiErrorPrompt", "true") setfflag("CrashUploadToBacktracePercentage", "0") setfflag("DFFlagCrashUploadToBacktracePercentage", "0") setfflag("FFlagHandleAltEnterFullscreenManually", "false") setfflag("FFlagDisableLoadingCharacterAppearance", "true") setfflag("FFlagDebugEnableCloudEdit", "false") setfflag("FFlagDebugReportCorescriptErrors", "false") setfflag("FFlagDebugDisplayCoreScriptErrors", "false") setfflag("FFlagEnableInGameMenuCustomization", "true") setfflag("FFlagEnableNewIGMExperiences", "true") setfflag("FFlagFixGraphicsQuality", "false") setfflag("FFlagDisablePerfStats", "true") setfflag("FFlagGraphicsSkipPresentCheck", "true") setfflag("FFlagDisableFullscreenOptimizations", "true") MADE BY DARKZZ1 { "FFlagDebugGraphicsDisableDirect3D11": false, "FFlagDebugGraphicsPreferD3D11": true } { "FFlagDebugGraphicsDisableDirect3D11": false, "FFlagDebugGraphicsPreferD3D11": false, "FFlagDebugGraphicsPreferD3D11FL10": true, "FFlagGraphicsEnableD3D10Compute": true } { "FFlagDebugGraphicsDisableVulkan": false, "FFlagDebugGraphicsDisableVulkan11": false, "FFlagDebugGraphicsPreferVulkan": true, "FFlagRenderVulkanFixMinimizeWindow": true } { "FFlagDebugGraphicsPreferMetal": true } { "DFFlagDebugRenderForceTechnologyVoxel": true } { "FIntFRMMinGrassDistance": 0, "FIntFRMMaxGrassDistance": 0, "FIntRenderGrassDetailStrands": 0, "FIntRenderGrassHeightScaler": 0 } { "FStringPartTexturePackTablePre2022": "{\"glass\":{\"ids\":[\"rbxassetid://7547304948\",\"rbxassetid://7546645118\"],\"color\":[254,254,254,7]}}", "FStringPartTexturePackTable2022": "{\"glass\":{\"ids\":[\"rbxassetid://7547304948\",\"rbxassetid://7546645118\"],\"color\":[254,254,254,7]}}", "FStringTerrainMaterialTablePre2022": "", "FStringTerrainMaterialTable2022": "" } { "DFFlagDisableDPIScale": false } { "DFFlagDebugPauseVoxelizer": true } { "FStringPartTexturePackTablePre2022": "", "FStringPartTexturePackTable2022": "", "FStringTerrainMaterialTablePre2022": "", "FStringTerrainMaterialTable2022": "" } { "FStringPartTexturePackTablePre2022": "{\"glass\":{\"ids\":[\"rbxassetid://7547304948\",\"rbxassetid://7546645118\"],\"color\":[254,254,254,7]}}", "FStringPartTexturePackTable2022": "{\"glass\":{\"ids\":[\"rbxassetid://7547304948\",\"rbxassetid://7546645118\"],\"color\":[254,254,254,7]}}", "FStringTerrainMaterialTablePre2022": "", "FStringTerrainMaterialTable2022": "" } { "FIntRenderShadowIntensity": 0 } { "FFlagDisablePostFx": true } { "DFIntCSGLevelOfDetailSwitchingDistance": 0, "DFIntCSGLevelOfDetailSwitchingDistanceL12": 0, "DFIntCSGLevelOfDetailSwitchingDistanceL23": 0, "DFIntCSGLevelOfDetailSwitchingDistanceL34": 0 } { "FIntDebugForceMSAASamples": 0 } { "DFFlagTextureQualityOverrideEnabled": true, "DFIntTextureQualityOverride": 0 } { "FIntRenderLocalLightUpdatesMax": 1, "FIntRenderLocalLightUpdatesMin": 1 } { "FFlagDebugSkyGray": true } { "DFIntDebugFRMQualityLevelOverride": 1 } { "DFIntTextureCompositorActiveJobs": 0 } { "FFlagRenderCheckThreading": "True" } { "FFlagDebugRenderingSetDeterministic": "True" } { "DFFlagDebugDrawBroadPhaseAABBs": "True" } { "DFFlagDebugEnableInterpolationVisualizer": "True" } ]] activateBtn.MouseButton1Click:Connect(function() if string.lower(keyBox.Text) == string.lower(keyCerta) then loadstring(meuCodigoFFlags)() else keyBox.Text = "" keyBox.PlaceholderText = "Key incorreta!" end end)"
local decoded = game:GetService("HttpService"):Base64Decode(encoded)
loadstring(decoded)()
